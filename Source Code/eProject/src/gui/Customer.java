/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 *
 */
public class Customer extends javax.swing.JFrame {

    /**
     * Creates new form Customer
     */
    Connection con;
    ResultSet rs;
    PreparedStatement ps;
    DefaultTableModel tblModel;
    Vector row;
    server.Connection1 db = new server.Connection1();

    public Customer() {
        initComponents();
       
        btnAdd.setEnabled(true);
        btnDel.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnResetActionPerformed(null);
        tblModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }
        };
        tblModel.addColumn("Mã thẻ");
        tblModel.addColumn("Số CMND");
        tblModel.addColumn("Họ và Tên");
        tblModel.addColumn("Ngày đăng ký");
        tblModel.addColumn("SĐT");
        tblModel.addColumn("Email");
        tblModel.addColumn("Số điểm");
        tblModel.addColumn("Chiết khấu");
        tblCus.setModel(tblModel);
        ReloadTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGr = new javax.swing.ButtonGroup();
        lbLoiCMND = new javax.swing.JLabel();
        lbLoiName = new javax.swing.JLabel();
        lbLoiSDT = new javax.swing.JLabel();
        lbLoiEmail = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        txtCMND = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pnInfomation = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lbID = new javax.swing.JLabel();
        lbDate = new javax.swing.JLabel();
        lbDis = new javax.swing.JLabel();
        lbQuantity = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCus = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        lbSL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý thành viên");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        lbLoiCMND.setForeground(new java.awt.Color(255, 0, 0));

        lbLoiName.setForeground(new java.awt.Color(255, 0, 0));

        lbLoiSDT.setForeground(new java.awt.Color(255, 0, 0));

        lbLoiEmail.setForeground(new java.awt.Color(255, 0, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnUpdate.setBackground(new java.awt.Color(255, 51, 51));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDel.setBackground(new java.awt.Color(255, 51, 51));
        btnDel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDel.setForeground(new java.awt.Color(255, 255, 255));
        btnDel.setText("Xóa");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 51, 51));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Thẻ căn cước/CMND:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Họ và Tên:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Số điện thoại:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Email:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Thông tin thành viên");

        pnInfomation.setBackground(new java.awt.Color(255, 255, 255));
        pnInfomation.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Mã thẻ:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Ngày đăng ký:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Số điểm:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Chiết khấu:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("Thông tin thêm:");

        lbID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbID.setForeground(new java.awt.Color(255, 0, 0));
        lbID.setText("trống");

        lbDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbDate.setForeground(new java.awt.Color(255, 0, 0));
        lbDate.setText("trống");

        lbDis.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbDis.setForeground(new java.awt.Color(255, 0, 0));
        lbDis.setText("trống");

        lbQuantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbQuantity.setForeground(new java.awt.Color(255, 0, 0));
        lbQuantity.setText("trống");

        javax.swing.GroupLayout pnInfomationLayout = new javax.swing.GroupLayout(pnInfomation);
        pnInfomation.setLayout(pnInfomationLayout);
        pnInfomationLayout.setHorizontalGroup(
            pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInfomationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnInfomationLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbQuantity))
                    .addGroup(pnInfomationLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDis))
                    .addComponent(jLabel12)
                    .addGroup(pnInfomationLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbID))
                    .addGroup(pnInfomationLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDate)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        pnInfomationLayout.setVerticalGroup(
            pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInfomationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lbDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lbQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lbDis))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAdd.setBackground(new java.awt.Color(255, 51, 51));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tblCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCus.getTableHeader().setReorderingAllowed(false);
        tblCus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCus);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Thành viên:");

        lbSL.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbSL.setText("(0 thành viên)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbSL))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(txtCMND))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(80, 80, 80)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGap(59, 59, 59)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btnAdd)
                        .addGap(6, 6, 6)
                        .addComponent(btnUpdate)
                        .addGap(6, 6, 6)
                        .addComponent(btnDel)
                        .addGap(6, 6, 6)
                        .addComponent(btnReset))
                    .addComponent(pnInfomation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2))
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDel)
                    .addComponent(btnReset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnInfomation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(lbSL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbLoiCMND)
                    .addComponent(lbLoiName)
                    .addComponent(lbLoiSDT)
                    .addComponent(lbLoiEmail))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(lbLoiCMND)
                .addGap(31, 31, 31)
                .addComponent(lbLoiName)
                .addGap(28, 28, 28)
                .addComponent(lbLoiSDT)
                .addGap(34, 34, 34)
                .addComponent(lbLoiEmail)
                .addContainerGap(372, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtCMND.setText("");
        txtName.setText("");
        txtPhone.setText("");
        txtEmail.setText("");
        txtCMND.setEnabled(true);
        txtName.setEnabled(true);
        txtPhone.setEnabled(true);
        txtEmail.setEnabled(true);
        pnInfomation.setVisible(false);
        lbID.setText("trống");
        lbDate.setText("trống");
        lbQuantity.setText("trống");
        lbDis.setText("trống");
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(true);
        btnDel.setEnabled(true);
        lbLoiCMND.setText("");
        lbLoiName.setText("");
        lbLoiSDT.setText("");
        lbLoiEmail.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
       
        
        while (true) {
            if (txtCMND.getText().trim().equals("")) {
                lbLoiCMND.setText("Số thẻ căn cước/CMND không được bỏ trống.");
                txtCMND.grabFocus();
                return;
            } else if (!txtCMND.getText().trim().matches("[0-9]+") || txtCMND.getText().trim().length() > 12 || txtCMND.getText().trim().length() < 9) {
                lbLoiCMND.setText("Số thẻ căn cước/CMND gồm 9-12 số.");
                txtCMND.grabFocus();
                return;
            } else {
                lbLoiCMND.setText("");
                break;
            }
        }
        
        try {
            ps = con.prepareStatement("select * from Customer where IdentityCard=?");
            ps.setString(1, txtCMND.getText());
            rs = ps.executeQuery();
            if (rs.next()) {
                lbLoiCMND.setText("");
                lbLoiName.setText("");
                lbLoiSDT.setText("");
                lbLoiEmail.setText("");
                txtName.setEnabled(true);
                txtCMND.setEnabled(true);
                txtPhone.setEnabled(true);
                txtEmail.setEnabled(true);
                txtCMND.setText(rs.getString(2));
                txtName.setText(rs.getString(3));
                txtPhone.setText(rs.getString(5));
                txtEmail.setText(rs.getString(6));

                lbID.setText(rs.getString(1));
                lbDate.setText(rs.getString(4));
                lbQuantity.setText(rs.getString(7) + " điểm");
                lbDis.setText(rs.getString(8) + "%");

                btnAdd.setEnabled(false);
                btnUpdate.setEnabled(false);
                btnDel.setEnabled(false);
                pnInfomation.setVisible(true);
            } 
            
            
            else {
                txtCMND.setEnabled(true);
                txtName.setEnabled(true);
                txtPhone.setEnabled(true);
                txtEmail.setEnabled(true);
                String Name = txtName.getText().replaceAll("\\s+", " ");
                while (true) {
                    if (txtName.getText().trim().equals("")) {
                        lbLoiName.setText("Họ và tên không được bỏ trống.");
                        txtName.grabFocus();
                        return;
                    } else if (Name.length() > 30) {
                        lbLoiName.setText("Họ và tên chứa tối đa 30 kí tự.");
                        txtName.grabFocus();
                        return;
                    } else {
                        lbLoiName.setText("");
                        break;
                    }
                }
                while (true) {
                    if (txtPhone.getText().trim().equals("")) {
                        lbLoiSDT.setText("SĐT không được bỏ trống.");
                        txtPhone.grabFocus();
                        return;
                    } else if (txtPhone.getText().trim().length() > 11 || txtPhone.getText().trim().length() < 10) {
                        lbLoiSDT.setText("SĐT chứa từ 10-11 số.");
                        txtPhone.grabFocus();
                        return;
                    } else if (!txtPhone.getText().trim().matches("0[1-9]{1}\\d{8,9}")) {
                        lbLoiSDT.setText("SĐT chưa đúng định dạng.");
                        txtPhone.grabFocus();
                        return;
                    } else {
                        lbLoiSDT.setText("");
                        break;
                    }
                }
                while (true) {
                    if (txtEmail.getText().trim().equals("")) {
                        lbLoiEmail.setText("Email không được bỏ trống.");
                        txtEmail.grabFocus();
                        return;
                    } else if (!txtEmail.getText().trim().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
                        lbLoiEmail.setText("Email chưa đúng định dạng.");
                        txtEmail.grabFocus();
                        return;
                    } else {
                        lbLoiEmail.setText("");
                        break;
                    }
                }
                ps = con.prepareStatement("Insert into Customer values(?,?,convert(varchar(20),getdate(),103),?,?,?,?)");
                ps.setString(1, txtCMND.getText().trim());
                ps.setString(2, Name);
                ps.setString(3, txtPhone.getText().trim());
                ps.setString(4, txtEmail.getText().trim());
                ps.setInt(5, 0);
                ps.setInt(6, 0);
                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Thêm thành viên thành công.");
                    btnAddActionPerformed(evt);
                } else {
                    JOptionPane.showMessageDialog(null, "Thêm thành viên thất bại.");
                }
                ReloadTable();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        while (true) {
            if (txtPhone.getText().trim().equals("")) {
                lbLoiSDT.setText("SĐT không được bỏ trống.");
                txtPhone.grabFocus();
                return;
            } else if (txtPhone.getText().trim().length() > 11 || txtPhone.getText().trim().length() < 10) {
                lbLoiSDT.setText("SĐT chứa từ 10-11 số.");
                txtPhone.grabFocus();
                return;
            } else if (!txtPhone.getText().trim().matches("0[1-9]{1}\\d{8,9}")) {
                lbLoiSDT.setText("SĐT chưa đúng định dạng.");
                txtPhone.grabFocus();
                return;
            } else {
                lbLoiSDT.setText("");
                break;
            }
        }
        while (true) {
            if (txtEmail.getText().trim().equals("")) {
                lbLoiEmail.setText("Email không được bỏ trống.");
                txtEmail.grabFocus();
                return;
            } else if (!txtEmail.getText().trim().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
                lbLoiEmail.setText("Email chưa đúng định dạng.");
                txtEmail.grabFocus();
                return;
            } else {
                lbLoiEmail.setText("");
                break;
            }
        }
        try {
            ps = con.prepareStatement("Update Customer set CusName=?,Phone=?,Email=? where IDCus=?");
            ps.setString(1, txtName.getText().trim());
            ps.setString(2, txtPhone.getText().trim());
            ps.setString(3, txtEmail.getText().trim());
            ps.setString(4, lbID.getText());
       
            if (ps.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(null, "Cập nhật thành viên thành công.");
                txtCMND.setEnabled(false);
                txtName.setEnabled(false);
                txtPhone.setEnabled(true);
                txtEmail.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "Cập nhật thành viên thất bại.");
            }
            ReloadTable();
        } catch (SQLException e) {
            System.out.print(e.toString());
            // JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        int click = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn xóa thành viên này?");
        if (click == 0) {
            try {
                ps = con.prepareStatement("Delete from Customer where IDCus=?");
                ps.setString(1, lbID.getText());
                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Xóa thành viên thành công.");
                    btnResetActionPerformed(evt);
                } else {
                    JOptionPane.showMessageDialog(null, "Xóa thành viên thất bại.");
                }
                ReloadTable();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
            }
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void tblCusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCusMouseClicked
        pnInfomation.setVisible(true);
        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnDel.setEnabled(true);
        DefaultTableModel model = (DefaultTableModel) tblCus.getModel();
        String code = model.getValueAt(tblCus.getSelectedRow(),0).toString();
        String cmd = model.getValueAt(tblCus.getSelectedRow(),1).toString();
        String name = model.getValueAt(tblCus.getSelectedRow(),2).toString();
        String phone = model.getValueAt(tblCus.getSelectedRow(),4).toString();
        String email = model.getValueAt(tblCus.getSelectedRow(),5).toString();
        String date = model.getValueAt(tblCus.getSelectedRow(),3).toString();
        String number = model.getValueAt(tblCus.getSelectedRow(),6).toString();
        String per = model.getValueAt(tblCus.getSelectedRow(),7).toString();
        txtCMND.setText(cmd);
        txtName.setText(name);
        txtPhone.setText(phone);
        txtEmail.setText(email);
        lbID.setText(code);
        lbDate.setText(date);
        lbQuantity.setText(number + " điểm");
        lbDis.setText(per +"%");
        
        
        
    }//GEN-LAST:event_tblCusMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.ButtonGroup btnGr;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbDis;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbLoiCMND;
    private javax.swing.JLabel lbLoiEmail;
    private javax.swing.JLabel lbLoiName;
    private javax.swing.JLabel lbLoiSDT;
    private javax.swing.JLabel lbQuantity;
    private javax.swing.JLabel lbSL;
    private javax.swing.JPanel pnInfomation;
    private javax.swing.JTable tblCus;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables

    private void ReloadTable() {
        con = db.getCon();
        tblModel.getDataVector().removeAllElements();
        try {
            ps = con.prepareStatement("select * from Customer order by IDCus DESC");
            rs = ps.executeQuery();
            while (rs.next()) {
                row = new Vector();
                row.add(rs.getString(1));
                row.add(rs.getString(2));
                row.add(rs.getString(3));
                row.add(rs.getString(4));
                row.add(rs.getString(5));
                row.add(rs.getString(6));
                row.add(rs.getString(7));
                row.add(rs.getString(8));
                tblModel.addRow(row);
            }
            tblCus.setModel(tblModel);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Không thể kết nối đến máy chủ");
        }
        lbSL.setText("(" + tblCus.getRowCount() + " thành viên)");
    }
}
