package gui;

import java.awt.Dimension;
import java.awt.Graphics;
import java.security.MessageDigest;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.util.Base64;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Asus
 */
public class EmployeeManager extends javax.swing.JFrame {

    ResultSet rs, rsSearch;
    Statement st;
    Vector vec, rowTen;
    PreparedStatement ps, psSearch;
    DefaultTableModel tblModel,model;
    server.Connection1 db = new server.Connection1();
    Connection con;
    SimpleDateFormat ft = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat ftError = new SimpleDateFormat("yyyy/MM/dd");
    SetImage img = new SetImage();
    Date now = new Date();

    public EmployeeManager() {
        initComponents();
   

        
        tblModel = new DefaultTableModel();
        tblModel.addColumn("Tài khoản");
//        tblModel.addColumn("Mật khẩu");
        tblModel.addColumn("Họ và tên");
        tblModel.addColumn("Giới tính");
        tblModel.addColumn("Ngày sinh");
        tblModel.addColumn("Số điện thoại");
        tblModel.addColumn("Email");
        tblModel.addColumn("Địa chỉ");
        tblModel.addColumn("Lương");
        tblModel.addColumn("Số ngày");
        tblModel.addColumn("Mức lương");
        tblModel.addColumn("Tiền thưởng");
        tblModel.addColumn("Chức vụ");
        tblEmp.setModel(tblModel);
        loadData();


    }
    private void filter(String query)
    {
       model = (DefaultTableModel) tblEmp.getModel(); 
        TableRowSorter<DefaultTableModel> model1 = new TableRowSorter<DefaultTableModel>(model);
        tblEmp.setRowSorter(model1);
        model1.setRowFilter(RowFilter.regexFilter(query));
    
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel(){
            ImageIcon icon = new ImageIcon("image//white1.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmp = new javax.swing.JTable(){ImageIcon icon = new ImageIcon("image//back_glossy.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }

        };
        jPanel1 = new javax.swing.JPanel(){
            ImageIcon icon = new ImageIcon("image//white1.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        lb = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        rdMale = new javax.swing.JRadioButton();
        rdFemale = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tarAddress = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtPass = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        txtPass1 = new javax.swing.JPasswordField();
        Name = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        txtBirthday = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        lbSearch = new javax.swing.JLabel();
        btnLuu = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtNgay = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        cbbLuong = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        txtThuong = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        btnLuong = new javax.swing.JButton();
        txtTienLuong = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbjob = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý nhân viên");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("BẢNG QUẢN LÍ NHÂN VIÊN");

        tblEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblEmp.getTableHeader().setReorderingAllowed(false);
        tblEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmp);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        lb.setBackground(new java.awt.Color(255, 255, 255));
        lb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lb.setText("Tài khoản :");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Mật khẩu : ");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Giới tính : ");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Ngày sinh : ");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Địa chỉ :");

        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        rdMale.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdMale);
        rdMale.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdMale.setSelected(true);
        rdMale.setText("Nam");

        rdFemale.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdFemale);
        rdFemale.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdFemale.setText("Nữ");

        tarAddress.setColumns(20);
        tarAddress.setRows(5);
        jScrollPane2.setViewportView(tarAddress);

        btnAdd.setBackground(new java.awt.Color(255, 0, 0));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Xác nhận mật khẩu :");

        txtPass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPass1ActionPerformed(evt);
            }
        });

        Name.setBackground(new java.awt.Color(255, 255, 255));
        Name.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Name.setText("Họ và Tên :");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Email :");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 0, 0));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        txtBirthday.setDateFormatString("dd/MM/yyyy");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setText("Số điện thoại :");

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        lbSearch.setBackground(new java.awt.Color(255, 255, 255));
        lbSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbSearch.setText("Tìm Kiếm:");

        btnLuu.setBackground(new java.awt.Color(255, 0, 0));
        btnLuu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLuu.setForeground(new java.awt.Color(255, 255, 255));
        btnLuu.setText("Sửa");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Số ngày làm việc : ");

        txtNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("Mức lương : ");

        cbbLuong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        cbbLuong.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100,000", "200,000", "300,000", "400,000" }));
        cbbLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLuongActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Tiền thưởng thêm : ");

        txtThuong.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtThuongCaretUpdate(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Tiền lương :");

        btnLuong.setBackground(new java.awt.Color(255, 255, 255));
        btnLuong.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnLuong.setText("Tính lương");
        btnLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuongActionPerformed(evt);
            }
        });

        txtTienLuong.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtTienLuong.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Chức vụ");

        cbjob.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nhân  viên", "Quản lý", " " }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(Name)
                                                .addComponent(jLabel3))
                                            .addGap(69, 69, 69)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(rdMale)
                                                    .addGap(44, 44, 44)
                                                    .addComponent(rdFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lb)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel15)
                                                .addComponent(jLabel4))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtPhone)
                                                .addComponent(txtUser)
                                                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtBirthday, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addGap(95, 95, 95)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(40, 40, 40))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel17))
                                    .addGap(25, 25, 25)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbbLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(35, 35, 35)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lbSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel20)
                                .addComponent(jLabel18))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTienLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtThuong, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel19))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtPass1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbjob, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lb)
                                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Name)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbjob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rdMale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addComponent(rdFemale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(txtBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtPass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(cbbLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(txtThuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTienLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel18)))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(530, 530, 530)
                        .addComponent(jLabel7)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMouseClicked
        btnAdd.setEnabled(false);
      
        int line = tblEmp.getSelectedRow();
        try {
            String sql = "select Password from Employee where UsernameEmp=?";
            ps = con.prepareStatement(sql);
            ps.setString(1, (String) tblModel.getValueAt(line, 0));
            rs = ps.executeQuery();
            if (rs.next()) {
                txtPass.setText(rs.getString(1));
                txtPass1.setText(rs.getString(1));
            }
            String username = (String) tblModel.getValueAt(line, 0);
            String name = (String) tblModel.getValueAt(line, 1);
            String sex = (String) tblModel.getValueAt(line, 2);
            Date birthday = ft.parse((String) tblModel.getValueAt(line, 3));
            String phone = (String) tblModel.getValueAt(line, 4);
            String email = (String) tblModel.getValueAt(line, 5);
            String address = (String) tblModel.getValueAt(line, 6);
            String money = (String) tblModel.getValueAt(line, 7);
            String workdate = (String) tblModel.getValueAt(line, 8);
            String stand = (String) tblModel.getValueAt(line, 9);
            String price = (String) tblModel.getValueAt(line, 10);
            txtUser.setText(username);
            txtName.setText(name);
            txtBirthday.setDate(birthday);
            txtPhone.setText(phone);
            txtEmail.setText(email);
            tarAddress.setText(address);
            txtTienLuong.setText(money);
            cbbLuong.setSelectedItem(stand);
            txtThuong.setText(price);
            if (sex.equals("Nam")) {
                rdMale.setSelected(true);
            } else {
                rdFemale.setSelected(true);
            }
            txtNgay.setText(workdate);
            
        } catch (ParseException e) {
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblEmpMouseClicked

    private void txtThuongCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtThuongCaretUpdate

    }//GEN-LAST:event_txtThuongCaretUpdate

    private void cbbLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbLuongActionPerformed

    private void btnLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuongActionPerformed
        while (true) {
            if (txtNgay.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Số ngày làm việc không được bỏ trống ! ");
                return;
            } else if (!txtNgay.getText().trim().matches("[0-9]+")) {
                JOptionPane.showMessageDialog(null, "Ngày làm việc phải là số ! ");
                return;
            } else if (Double.parseDouble(txtNgay.getText().trim()) > 31) {
                JOptionPane.showMessageDialog(null, "Số ngày làm việc phải nhỏ hơn 31");
                return;
            } else {
                break;
            }
        }
        double ngay = Double.parseDouble(txtNgay.getText().trim());
        String a = (String) cbbLuong.getSelectedItem();
        double LuongCB = Double.parseDouble(a.replaceAll(",", ""));
        double TienLuong;

        if (txtThuong.getText().trim().equals("")) {
            TienLuong = ngay * LuongCB;
        } else {
            while (true) {
                if (!txtThuong.getText().trim().matches("[0-9]+")) {
                    JOptionPane.showMessageDialog(null, "Tiền thưởng phải là số ! ");
                    return;
                } else if (Double.parseDouble(txtThuong.getText().trim()) > 500000) {
                    JOptionPane.showMessageDialog(null, "Tiền thưởng phải nhỏ hơn 500.000 ");
                    return;
                } else {
                    break;
                }
            }
            double Thuong = Double.parseDouble(txtThuong.getText().trim());
            TienLuong = (ngay * LuongCB) + Thuong;
        }
        txtTienLuong.setText(String.valueOf(nft.format(TienLuong)) + " VNĐ");
    }//GEN-LAST:event_btnLuongActionPerformed

    private void txtNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgayActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        int click = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn muốn lưu ?");
        while (true) {
            if (txtPass.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống ! ");
                txtPass.grabFocus();
                return;
            } else if (txtPass.getText().trim().length() > 18) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được lớn hơn 18 kí tự ! ");
                txtPass.grabFocus();
                return;
            } else if (txtPass.getText().trim().length() < 6) {
                JOptionPane.showMessageDialog(this, "Mật khẩu phải lớn hơn 6 kí tự  ! ");
                txtPass.grabFocus();
                return;
            } else {
                break;
            }

        }
        while (true) {
            if (txtPass1.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Xác nhận mật khẩu không được để trống !");
                txtPass1.grabFocus();
                return;
            } else if (!txtPass1.getText().trim().equals(txtPass.getText().trim())) {
                JOptionPane.showMessageDialog(this, "Xác nhận mật khẩu phải giống mật khẩu !");
                txtPass1.grabFocus();
                return;
            } else {
                break;
            }

        }
        while (true) {
            if (txtName.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Họ và tên không được để trống !");
                txtName.grabFocus();
                return;
            } else if (txtName.getText().trim().length() > 30) {
                JOptionPane.showMessageDialog(this, "Họ và tên không được lớn hơn 30 kí tự ! ");
                txtName.grabFocus();
                return;
            }
            {
                break;
            }

        }
        while (true) {
            if (ftError.format(txtBirthday.getDate()).compareTo("2000/01/01") >= 0) {
                JOptionPane.showMessageDialog(this, "Nhân viên phải đủ 18 tuổi ! ");
                txtBirthday.grabFocus();
                return;
            } else {
                break;
            }

        }
        if (!txtPhone.getText().trim().equals("")) {
            while (true) {
                if (txtPhone.getText().trim().length() > 11 || txtPhone.getText().trim().length() < 10) {
                    JOptionPane.showMessageDialog(this, "Số điện thoại gồm 10-11 số.");
                    txtPhone.grabFocus();
                    return;
                } else if (!txtPhone.getText().trim().matches("0[1-9]{1}\\d{8,9}")) {
                    JOptionPane.showMessageDialog(this, "Không đúng định dạng số điện thoại ! Ví dụ : 012345678x hoặc 098765432x");
                    txtPhone.grabFocus();
                    return;
                } else {
                    break;
                }

            }
        }
        if (!txtEmail.getText().trim().equals("")) {
            while (true) {
                if (!txtEmail.getText().trim().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
                JOptionPane.showMessageDialog(this, "Không đúng định dạng Email ! Ví dụ : (abcdef@gmail.com) ");
                txtEmail.grabFocus();
                return;
            } else {
                break;
            }
        }
        }
        while (true) {
            if (tarAddress.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được để trống !");
                tarAddress.grabFocus();
                return;
            } else if (tarAddress.getText().trim().length() > 100) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được lớn hơn 100 kí tự ! ");
                tarAddress.grabFocus();
                return;
            }
            {
                break;
            }

        }
        while (true) {
            if (txtTienLuong.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Hình ảnh không được để trống !");
                txtTienLuong.grabFocus();
                return;
            } else {
                break;
            }
        }

        try {
            ps = con.prepareStatement("update Employee set Password=?,NameEmp=?,Gender=?,Birthday=?,Phone=?,Email=?,Address=?,Salary=?,workdate=?,stand=?,price=?,job=? where UsernameEmp=?");

          
            ps.setString(1, getEncoded(txtPass.getText()));
            ps.setString(2, txtName.getText());
            ps.setString(4, ft.format(txtBirthday.getDate()));
            ps.setString(5, txtPhone.getText());
            ps.setString(6, txtEmail.getText());
            ps.setString(7, tarAddress.getText());
            ps.setString(8, txtTienLuong.getText());
            ps.setString(9, txtNgay.getText());
            ps.setString(10,cbbLuong.getSelectedItem().toString());
            ps.setString(11, txtThuong.getText());
            ps.setString(12, cbjob.getSelectedItem().toString());
            ps.setString(13, txtUser.getText());
            if (rdMale.isSelected()) {
                ps.setString(3, "Nam");
            } else {
                ps.setString(3, "Nữ");
            }

            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Lưu thành công ! ");
            tblModel.getDataVector().removeAllElements();
            loadData();
            btnResetActionPerformed(evt);
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
    
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtUser.setText("");
        txtName.setText("");
        txtEmail.setText("");
        txtPass.setText("");
        txtPass1.setText("");
        txtPhone.setText("");
        tarAddress.setText("");
        rdMale.setSelected(true);
       
      
        btnAdd.setEnabled(true);
       
        txtUser.setEnabled(true);
        tblModel.getDataVector().removeAllElements();
        txtTienLuong.setText("");
        txtThuong.setText("");
        txtNgay.setText("");
        cbbLuong.setSelectedIndex(0);
        txtPass.setEnabled(true);
        txtPass1.setEnabled(true);
        txtEmail.setEnabled(true);
        tarAddress.setEnabled(true);
        txtName.setEnabled(true);
        txtPhone.setEnabled(true);
        txtBirthday.setEnabled(true);
       
        rdFemale.setEnabled(true);
        rdMale.setEnabled(true);
      
        loadData();
    }//GEN-LAST:event_btnResetActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtPass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPass1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPass1ActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int click = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn muốn xóa ?");
        if (click == 0) {
            try {
                ps = con.prepareStatement("select * from [Order] where UsernameEmp=?");
                ps.setString(1, txtUser.getText());
                rs = ps.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "Nhân viên đang còn đơn hàng, không thể xóa.");
                } else {
                    try {
                        ps = con.prepareStatement("Delete from Employee where UsernameEmp=?");
                        ps.setString(1, txtUser.getText());
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Xóa thành công ! ");
                        btnResetActionPerformed(evt);
                        tblModel.getDataVector().removeAllElements();
                        loadData();
                    } catch (Exception e) {
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(EmployeeManager.class.getName()).log(Level.SEVERE, null, ex);
            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int click = JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm nhân viên mới  ?");
        while (true) {
            try {
                ps = con.prepareStatement("select * from Employee where UsernameEmp = ?");
                ps.setString(1, txtUser.getText().trim());
                rs = ps.executeQuery();
                if (txtUser.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(this, "Tài khoản không được để trống !");
                    txtUser.grabFocus();
                    return;
                } else if (rs.next()) {
                    JOptionPane.showMessageDialog(this, "Tài khoản này đã tồn tại !");
                    txtUser.grabFocus();
                    return;
                } else if (txtUser.getText().trim().length() > 30) {
                    JOptionPane.showMessageDialog(this, "Tài khoản không được lớn hơn 30 kí tự ! ");
                    txtUser.grabFocus();
                    return;
                } else if (txtUser.getText().trim().length() < 6) {
                    JOptionPane.showMessageDialog(this, "Tài khoản phải lớn hơn 6 kí tự  ! ");
                    txtUser.grabFocus();
                    return;
                } else if (!txtUser.getText().trim().matches("[A-Za-z0-9]+")) {
                    JOptionPane.showMessageDialog(this, "Tài khoản phải có chữ và số ! ");
                    txtUser.grabFocus();
                    return;
                } else {
                    break;
                }
            } catch (Exception e) {
            }

        }
        while (true) {

            if (txtPass.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống ! ");
                txtPass.grabFocus();
                return;
            } else if (txtPass.getText().trim().length() > 18) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được lớn hơn 18 kí tự ! ");
                txtPass.grabFocus();
                return;
            } else if (txtPass.getText().trim().length() < 6) {
                JOptionPane.showMessageDialog(this, "Mật khẩu phải lớn hơn 6 kí tự  ! ");
                txtPass.grabFocus();
                return;
            } else if (!txtPass.getText().matches("[A-Za-z0-9]+")) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được có khoảng cách và kí tự đặc biệt ! ");
                txtPass.grabFocus();
                return;
            } else {
                break;
            }

        }
        while (true) {
            if (txtPass1.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Xác nhận mật khẩu không được để trống !");
                txtPass1.grabFocus();
                return;
            } else if (!txtPass1.getText().trim().equals(txtPass.getText().trim())) {
                JOptionPane.showMessageDialog(this, "Xác nhận mật khẩu phải giống mật khẩu !");
                txtPass1.grabFocus();
                return;
            } else {
                break;
            }

        }
        while (true) {
            if (txtName.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Họ và tên không được để trống !");
                txtName.grabFocus();
                return;
            } else if (txtName.getText().trim().length() > 30) {
                JOptionPane.showMessageDialog(this, "Tên không được lớn hơn 30 kí tự ! ");
                txtName.grabFocus();
                return;
            }
            {
                break;
            }

        }
        while (true) {
            if (ftError.format(txtBirthday.getDate()).compareTo("2000/01/01") >= 0) {
                JOptionPane.showMessageDialog(this, "Nhân viên phải đủ 18 tuổi !");
                txtBirthday.grabFocus();
                return;
            } else {
                break;
            }

        }
        if (!txtPhone.getText().trim().equals("")) {
            while (true) {
                if (txtPhone.getText().trim().length() > 11 || txtPhone.getText().trim().length() < 10) {
                    JOptionPane.showMessageDialog(this, "Số điện thoại gồm 10-11 số.");
                    txtPhone.grabFocus();
                    return;
                } else if (!txtPhone.getText().trim().matches("0[1-9]{1}\\d{8,9}")) {
                    JOptionPane.showMessageDialog(this, "Không đúng định dạng số điện thoại ! Ví dụ : 012345678x hoặc 098765432x");
                    txtPhone.grabFocus();
                    return;
                } else {
                    break;
                }

            }
        }
        if (!txtEmail.getText().trim().equals("")) {
            while (true) {
                if (!txtEmail.getText().trim().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
                JOptionPane.showMessageDialog(this, "Không đúng định dạng Email ! Ví dụ : (abcdef@gmail.com) ");
                txtEmail.grabFocus();
                return;
            } else {
                break;
            }
        }
        }
        while (true) {
            if (tarAddress.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được để trống !");
                tarAddress.grabFocus();
                return;
            } else if (tarAddress.getText().trim().length() > 100) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được lớn hơn 100 kí tự ! ");
                tarAddress.grabFocus();
                return;
            } else {
                break;
            }

        }
        while (true) {
            if (txtTienLuong.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Hình ảnh không được để trống !");
                txtTienLuong.grabFocus();
                return;
            } else {
                break;
            }

        }

        try {
            
            {
            ps = con.prepareStatement("Insert into Employee values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
            ps.setString(1, txtUser.getText());
            ps.setString(2, getEncoded(txtPass.getText()));
            ps.setString(3, txtName.getText());
            if (rdMale.isSelected()) {
                ps.setString(4, "Nam");
            } else {
                ps.setString(4, "Nữ");
            }
            ps.setString(5, ft.format(txtBirthday.getDate()));
            ps.setString(6, txtPhone.getText());
            ps.setString(7, txtEmail.getText());
            ps.setString(8, tarAddress.getText());
            ps.setString(9, txtTienLuong.getText());
            ps.setString(10, txtNgay.getText());
            ps.setString(11, (String) cbbLuong.getSelectedItem());
            ps.setString(12, txtThuong.getText());
            ps.setString(13, cbjob.getSelectedItem().toString());
            ps.executeUpdate();
            tblModel.getDataVector().removeAllElements();
            loadData();
            
            if(cbjob.getSelectedItem().equals("Quản lý"))
        {
            ps = con.prepareStatement("Insert into Administrator values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
            ps.setString(1, txtUser.getText());
            ps.setString(2, getEncoded(txtPass.getText()));
            ps.setString(3, txtName.getText());
            if (rdMale.isSelected()) {
                ps.setString(4, "Nam");
            } else {
                ps.setString(4, "Nữ");
            }
            ps.setString(5, ft.format(txtBirthday.getDate()));
            ps.setString(6, txtPhone.getText());
            ps.setString(7, txtEmail.getText());
            ps.setString(8, tarAddress.getText());
            ps.setString(9, txtTienLuong.getText());
            ps.setString(10, txtNgay.getText());
            ps.setString(11, (String) cbbLuong.getSelectedItem());
            ps.setString(12, txtThuong.getText());
            ps.setString(13, cbjob.getSelectedItem().toString());
            ps.executeUpdate();
       
       }
            
            
            
            
            

            JOptionPane.showMessageDialog(this, "Thêm tài khoản thành công ! ");
            }
               
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeManager.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
        
        
    }//GEN-LAST:event_btnAddActionPerformed
 
    private static String getEncoded(String password)
    {
        return Base64.getEncoder().encodeToString(password.getBytes());
    
    }
    
    
    
    
    
    
    
    
    
    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
       String query =txtSearch.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchKeyReleased
    NumberFormat nft = new DecimalFormat("#,###");

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Name;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLuong;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnReset;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbbLuong;
    private javax.swing.JComboBox<String> cbjob;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lb;
    private javax.swing.JLabel lbSearch;
    private javax.swing.JRadioButton rdFemale;
    private javax.swing.JRadioButton rdMale;
    private javax.swing.JTextArea tarAddress;
    private javax.swing.JTable tblEmp;
    private com.toedter.calendar.JDateChooser txtBirthday;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNgay;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JPasswordField txtPass1;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtThuong;
    private javax.swing.JLabel txtTienLuong;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        con = db.getCon();
        try {
            ps = con.prepareStatement("Select * from Employee");
            rs = ps.executeQuery();
            while (rs.next()) {
                vec = new Vector();
                vec.add(rs.getString(1));
                vec.add(rs.getString(3));
                vec.add(rs.getString(4));
                vec.add(rs.getString(5));
                vec.add(rs.getString(6));
                vec.add(rs.getString(7));
                vec.add(rs.getString(8));
                vec.add(rs.getString(9));       
                vec.add(rs.getString(10));
                vec.add(rs.getString(11));
                vec.add(rs.getString(12));
                vec.add(rs.getString(13));

                tblModel.addRow(vec);
            }
            tblEmp.setModel(tblModel);
        } catch (SQLException ex) {

            Logger.getLogger(EmployeeManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
